{
	"info": {
		"_postman_id": "39f02eb2-f418-4c00-86a5-302a80e795b6",
		"name": "Данные о товаре по datamatrix и QR (Мобилка)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Получение данных о товаре",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setGlobalVariable('code', \"010461005102061021?5pa1r>%JMX3N/u001d91EE05/u001d92CU2p2Z2lAUmSa5p2dXOKc36rnOCJcLfoudZl++ZzMCc=\");\r",
							"\r",
							"if(pm.globals.get('code').indexOf(\"http\")==false){\r",
							"postman.setGlobalVariable('codeType', \"qr\");}\r",
							"else{\r",
							"pm.globals.set('codeType', \"datamatrix\");}\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"switch (jsonData.category){\r",
							"case 'bicycle' :\r",
							"\r",
							"var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"pm.environment.set('*Наименование товара тг велосипед', jsonData.productName)\r",
							"pm.environment.set('*Cтрана тг велосипед', jsonData.bicycleData.country)\r",
							"pm.environment.set('*Товарный знак тг велосипед', jsonData.bicycleData.brand)\r",
							"pm.environment.set('*Модель / Артикул производителя тг велосипед', jsonData.bicycleData. model)\r",
							"pm.environment.set('*Год производства тг велосипед', jsonData.bicycleData. productProperty. productionYear)\r",
							"pm.environment.set('*Тип рамы (условия реализованы) тг велосипед', jsonData.bicycleData. productKind)\r",
							"pm.environment.set('*Тип велосипеда (условия реализованы) тг велосипед', jsonData.bicycleData. productKind)\r",
							"pm.environment.set('*Размер рамы, дюйм тг велосипед', jsonData.bicycleData. productProperty. frameSize)\r",
							"pm.environment.set('*Материал рамы тг велосипед', jsonData.bicycleData. productProperty. frameMaterial)\r",
							"pm.environment.set('*Цвет тг велосипед', jsonData.bicycleData. productProperty. color)\r",
							"pm.environment.set('*Конструктивная масса, кг тг велосипед', jsonData.bicycleData. productProperty. weightGross)\r",
							"\r",
							"//ПРОИЗВОДИТЕЛЬ\r",
							"if( jsonData.bicycleData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.bicycleData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status=\"EMMITED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\"||\"APPLIED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        \r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"        \r",
							"//ИМПОРТЕР\r",
							"if( jsonData.bicycleData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.bicycleData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.bicycleData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status=\"EMMITED\"||\"APPLIED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){\r",
							"pm.environment.set('*Импортер тг велосипед',jsonData.codeData.producerName) \r",
							"}\r",
							"\r",
							"\r",
							"//ЭКСПОРТЕР\r",
							"if( (jsonData.bicycleData.productProperty.emissionType = \"CROSSBORDER\"||\"FOREIGN\")&&(jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){ \r",
							"pm.environment.set('*Экспортёр тг велосипед', jsonData.bicycleData.productProperty. exporterName) \r",
							"}\r",
							"\r",
							"//ОПЕРАТОР\r",
							"if( (jsonData.bicycleData.productProperty.emissionType = \"CROSSBORDER\")&&(jsonData.status=\"EMMITED\"||\"APPLIED\")){\r",
							"pm.environment.set('*Оператор тг велосипед', jsonData.bicycleData.producerName) \r",
							"};\r",
							"\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===14195){\r",
							"        pm.environment.set('*Номинальный посадочный диаметр обода, дюйм,% тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===14249){\r",
							"        pm.environment.set('*Ширина профиля шины (камеры), дюйм тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===15150){\r",
							"        pm.environment.set('*Тип тормозной системы тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===15153){\r",
							"        pm.environment.set('*Тип передней вилки тг велосипед', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"var tgBicycl = new Object();\r",
							"tgDrugs.Фотографий = a;\r",
							"tgBicycl.Наименование_товара = pm.environment.get('*Наименование товара тг велосипед');\r",
							"tgBicycl.Cтрана = pm.environment.get('*Cтрана тг велосипед');\r",
							"tgBicycl.Товарный_знак =  pm.environment.get('*Товарный знак тг велосипед');\r",
							"tgBicycl.Модель_или_Артикул_производителя = pm.environment.get('*Модель / Артикул производителя тг велосипед');\r",
							"tgBicycl.Тип_рамы = pm.environment.get('*Тип рамы (условия реализованы) тг велосипед');\r",
							"tgBicycl.Тип_велосипеда = pm.environment.get('*Тип велосипеда (условия реализованы) тг велосипед');\r",
							"tgBicycl.Размер_рамы_и_дюйм = pm.environment.get('*Размер рамы, дюйм тг велосипед');\r",
							"tgBicycl.Материал_рамы = pm.environment.get('*Материал рамы тг велосипед');\r",
							"tgBicycl.Цвет = pm.environment.get('*Цвет тг велосипед');\r",
							"tgBicycl.Конструктивная_масса_и_кг = pm.environment.get('*Конструктивная масса, кг тг велосипед');\r",
							"tgBicycl.Производитель = pm.environment.get('*Производитель');\r",
							"tgBicycl.Импортер = pm.environment.get('*Импортер тг велосипед');\r",
							"tgBicycl.Экспортер = pm.environment.get('*Экспортёр тг велосипед');\r",
							"tgBicycl.Оператор = pm.environment.get('*Оператор тг велосипед');\r",
							"tgBicycl.Номинальный_посадочный_диаметр_обода_и_дюйма = pm.environment.get('*Номинальный посадочный диаметр обода, дюйм,% тг велосипед')\r",
							"tgBicycl.Ширина_профиля_шины_и_дюйм = pm.environment.get('*Ширина профиля шины (камеры), дюйм тг велосипед')\r",
							"tgBicycl.Тип_тормозной_системы = pm.environment.get('*Тип тормозной системы тг велосипед')\r",
							"tgBicycl.Тип_передней_вилки = pm.environment.get('*Тип передней вилки тг велосипед')\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgBicycl));\r",
							"break;\r",
							"\r",
							"case 'water': \r",
							"pm.environment.set('*Наименование товара тг вода', jsonData.productName)\r",
							"pm.environment.set('*Cтрана тг вода', jsonData.waterData.country)\r",
							"pm.environment.set('*Бранд тг вода', jsonData.waterData.brand)\r",
							"pm.environment.set('*Тип продукта тг вода', jsonData.waterData.productType)\r",
							"pm.environment.set('*Заявленный объём тг вода', jsonData.volume)\r",
							"pm.environment.set('*Состав тг вода', jsonData.structure)\r",
							"pm.environment.set('*Общая минерализация тг вода', jsonData.mineralization)\r",
							"pm.environment.set('*Метод газирования тг вода', jsonData.carbonationMethod)\r",
							"pm.environment.set('*Продукция для детского питания тг вода', jsonData.babyFoodProduct)\r",
							"pm.environment.set('*Метод газирования тг вода', jsonData.carbonationMethod)\r",
							"\r",
							"//ПРОИЗВОДИТЕЛЬ\r",
							"if( jsonData.waterData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[10].attr_id==2503){\r",
							"        pm.environment.set('*Производитель тг вода', jsonData.catalogData.good_attrs[10].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.waterData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status=\"EMMITED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\"||\"APPLIED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[10].attr_id==2503){\r",
							"        pm.environment.set('*Производитель тг вода', jsonData.catalogData.good_attrs[10].attr_value) }\r",
							"    }\r",
							"}\r",
							"            //console.log(pm.environment.get('*Производитель'));\r",
							"\r",
							"//ИМПОРТЕР\r",
							"if( jsonData.waterData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер тг вода', jsonData.catalogData.good_attrs.attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.waterData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер тг вода', jsonData.catalogData.good_attrs.attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.waterData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status=\"EMMITED\"||\"APPLIED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){\r",
							"pm.environment.set('*Импортер тг вода',jsonData.waterData.producerName) \r",
							"}\r",
							"\r",
							"        //console.log(pm.environment.get('*Импортер'));\r",
							"\r",
							"//ЭКСПОРТЕР\r",
							"if( (jsonData.waterData.productProperty.emissionType = \"CROSSBORDER\"||\"FOREIGN\")&&(jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){ \r",
							"pm.environment.set('*Экспортёр тг вода', jsonData.waterData. productProperty. exporterName) \r",
							"}\r",
							"\r",
							"//ОПЕРАТОР\r",
							"if( (jsonData.waterData.productProperty.emissionType = \"CROSSBORDER\")&&(jsonData.status=\"EMMITED\"||\"APPLIED\")){\r",
							"pm.environment.set('*Оператор тг вода', jsonData.waterData.producerName) \r",
							"};\r",
							"\r",
							"var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"var tgWater = new Object();\r",
							"tgWater.Фотографий = a;\r",
							"tgWater.Наименование_товара = pm.environment.get('*Наименование товара тг вода');\r",
							"tgWater.Cтрана = pm.environment.get('*Cтрана тг вода');\r",
							"tgWater.Товарный_знак =  pm.environment.get('*Бранд тг вода');\r",
							"tgWater.Тип_продукта = pm.environment.get('*Тип продукта тг вода');\r",
							"tgWater.Заявленный_объём = pm.environment.get('*Заявленный объём тг вода');\r",
							"tgWater.Состав = pm.environment.get('*Состав тг вода');\r",
							"tgWater.Общая_минерализация = pm.environment.get('*Общая минерализация тг вода');\r",
							"tgWater.Продукция_для_детского_питания = pm.environment.get('*Продукция для детского питания тг вода');\r",
							"tgWater.Метод_газирования = pm.environment.get('*Метод газирования тг вода');\r",
							"tgWater.Производитель = pm.environment.get('*Производитель тг вода');\r",
							"tgWater.Импортер = pm.environment.get('*Импортер тг вода');\r",
							"tgWater.Экспортер = pm.environment.get('*Экспортёр тг вода');\r",
							"tgWater.Оператор = pm.environment.get('*Оператор тг вода');\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgWater));\r",
							"break;\r",
							"\r",
							"case 'milk':\r",
							"pm.environment.set('*Наименование товара тг молоко', jsonData.productName)\r",
							"pm.environment.set('*Страна тг молоко', jsonData.milkData.country)\r",
							"\r",
							"//Дата производства молока \r",
							"var dateOfMilkProduction = new Date(jsonData.milkData. producedDate);\r",
							"\r",
							"\r",
							"//ПРОИЗВОДИТЕЛЬ\r",
							"if( jsonData.milkData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"    }\r",
							"}\r",
							"}\r",
							"else if(( jsonData.milkData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status=\"EMMITED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\"||\"APPLIED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value)\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"//ИМПОРТЕР\r",
							"if( jsonData.milkData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2482){\r",
							"        pm.environment.set('*Импортер тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.milkData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2482){\r",
							"        pm.environment.set('*Импортер тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.milkData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status=\"EMMITED\"||\"APPLIED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){\r",
							"pm.environment.set('*Импортер тг молоко',jsonData.milkData.producerName); \r",
							"}\r",
							"       \r",
							"        \r",
							"\r",
							"//ЭКСПОРТЕР\r",
							"if( (jsonData.milkData.productProperty.emissionType = \"CROSSBORDER\"||\"FOREIGN\")&&(jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){ \r",
							"pm.environment.set('*Экспортёр тг молоко', jsonData.milkData. productProperty. exporterName) \r",
							"}\r",
							"\r",
							"//ОПЕРАТОР\r",
							"if( (jsonData.milkData.productProperty.emissionType = \"CROSSBORDER\")&&(jsonData.status=\"EMMITED\"||\"APPLIED\")){\r",
							"pm.environment.set('*Оператотр тг молоко', jsonData.milkData.producerName) \r",
							"};\r",
							"\r",
							"//Жирность,%\r",
							"//значение из поля attr_value объекта, \"attr_id\" которого = 14     \r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===14){\r",
							"        pm.environment.set('*Жирность, % тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"//Белки, г\r",
							"//значение из поля attr_value объекта, \"attr_id\" которого = 15\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===15){\r",
							"        pm.environment.set('*Белки, г', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"//Заявленный объем\r",
							"//значение из поля attr_value объекта, \"attr_id\" которого = 15448\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===15448){\r",
							"        pm.environment.set('*Заявленный объем тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"//Состав\r",
							"//значение из поля attr_value объекта, \"attr_id\" которого = 2483\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2483){\r",
							"        pm.environment.set('*Состав тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"//Происхождение сырья\t\r",
							"//значение из поля attr_value объекта, \"attr_id\" которого = 13\r",
							" for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===13){\r",
							"        pm.environment.set('*Происхождение сырья тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"\r",
							"//Товарный знак\t\r",
							"//значение из поля attr_value объекта, \"attr_id\" которого = 2504\r",
							"  for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2504){\r",
							"        pm.environment.set('*Товарный знак тг молоко', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"var tgMilk = new Object();\r",
							"tgMilk.Фотографий = a;\r",
							"tgMilk.Наименование_товара = pm.environment.get('*Наименование товара тг молоко');\r",
							"tgMilk.Страна = pm.environment.get('*Страна тг молоко');\r",
							"tgMilk.Производитель =  pm.environment.get('*Производитель тг молоко');\r",
							"tgMilk.Импортер = pm.environment.get('*Импортер тг молоко');\r",
							"tgMilk.Экспортёр = pm.environment.get('*Экспортёр тг молоко');\r",
							"tgMilk.Оператотр = pm.environment.get('*Оператотр тг молоко');\r",
							"tgMilk.Жирность = pm.environment.get('*Жирность, % тг молоко');\r",
							"tgMilk.Заявленный_объем = pm.environment.get('*Заявленный объем тг молоко');\r",
							"tgMilk.Состав = pm.environment.get('*Состав тг молоко');\r",
							"tgMilk.Происхождение_сырья = pm.environment.get('*Происхождение сырья тг молоко');\r",
							"tgMilk.Товарный_знак = pm.environment.get('*Товарный знак тг молоко');\r",
							"tgMilk.Дата_производства = dateOfMilkProduction;\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgMilk));\r",
							"break;\r",
							"\r",
							"case 'shoes' :\r",
							"pm.environment.set('*Наименование товара ТГ Обувь', jsonData.productName)\r",
							"pm.environment.set('*Cтрана ТГ Обувь', jsonData.shoesData. country)\r",
							"pm.environment.set('*Бренд ТГ Обувь', jsonData.shoesData. brand)\r",
							"pm.environment.set('*Материал верха ТГ Обувь', jsonData.shoesData. productProperty. materialUpper)\r",
							"pm.environment.set('*Материал подкладки ТГ Обувь', jsonData.shoesData. productProperty. materialLining)\r",
							"pm.environment.set('*Материал низа ТГ Обувь', jsonData.shoesData. productProperty. materialDown)\r",
							"pm.environment.set('*Цвет ТГ Обувь', jsonData.shoesData. productProperty. color)\r",
							"pm.environment.set('*Размер ТГ Обувь', jsonData.shoesData. productProperty. productSize)\r",
							"pm.environment.set('*Модель (артикул) ТГ Обувь', jsonData.shoesData. model)\r",
							"\r",
							"//ПРОИЗВОДИТЕЛЬ\r",
							"if( jsonData.shoesData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель ТГ Обувь', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"     }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.shoesData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status=\"EMMITED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\"||\"APPLIED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель ТГ Обувь', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        \r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"        \r",
							"//ИМПОРТЕР\r",
							"if( jsonData.shoesData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер ТГ Обувь', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.shoesData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер ТГ Обувь', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.shoesData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status=\"EMMITED\"||\"APPLIED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){\r",
							"pm.environment.set('*Импортер ТГ Обувь',jsonData.codeData.producerName) \r",
							"}\r",
							"\r",
							"\r",
							"//ЭКСПОРТЕР\r",
							"if( (jsonData.shoesData.productProperty.emissionType = \"CROSSBORDER\"||\"FOREIGN\")&&(jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){ \r",
							"pm.environment.set('*Экспортёр ТГ Обувь', jsonData.shoesData.productProperty. exporterName) \r",
							"}\r",
							"\r",
							"//ОПЕРАТОР\r",
							"if( (jsonData.shoesData.productProperty.emissionType = \"CROSSBORDER\")&&(jsonData.status=\"EMMITED\"||\"APPLIED\")){\r",
							"pm.environment.set('*Оператор ТГ Обувь', jsonData.shoesData.producerName) \r",
							"};\r",
							"\r",
							"var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"var tgFootwear = new Object();\r",
							"tgFootwear.Изображений = a;\r",
							"tgFootwear.Наименование_товара = pm.environment.get('*Наименование товара ТГ Обувь');\r",
							"tgFootwear.Cтрана = pm.environment.get('*Cтрана ТГ Обувь');\r",
							"tgFootwear.Бренд = pm.environment.get('*Бренд ТГ Обувь');\r",
							"tgFootwear.Материал_верха = pm.environment.get('*Материал верха ТГ Обувь');\r",
							"tgFootwear.Материал_подкладки = pm.environment.get('*Материал подкладки ТГ Обувь');\r",
							"tgFootwear.Материал_низа = pm.environment.get('*Материал низа ТГ Обувь');\r",
							"tgFootwear.Цвет = pm.environment.get('*Цвет ТГ Обувь');\r",
							"tgFootwear.Размер = pm.environment.get('*Размер ТГ Обувь');\r",
							"tgFootwear.Модель = pm.environment.get('*Модель (артикул) ТГ Обувь');\r",
							"tgFootwear.Производитель = pm.environment.get('*Производитель v');\r",
							"tgFootwear.Импортер = pm.environment.get('*Импортер ТГ Обувь');\r",
							"tgFootwear.Экспортер = pm.environment.get('*Экспортёр ТГ Обувь');\r",
							"tgFootwear.Оператор = pm.environment.get('*Оператор ТГ Обувь');\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgFootwear));\r",
							"break;\r",
							"\r",
							"case 'perfumery':\r",
							"pm.environment.set('*Наименование товара ТГ Парфюм', jsonData.productName)\r",
							"pm.environment.set('*Cтрана ТГ Парфюм', jsonData.perfumeryData. country)\r",
							"pm.environment.set('*Дата производства ТГ Парфюм', jsonData.perfumeryData. producedDate)\r",
							"\r",
							"\r",
							"//ПРОИЗВОДИТЕЛЬ\r",
							"if( jsonData.perfumeryData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.perfumeryData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status=\"EMMITED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\"||\"APPLIED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        \r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"        \r",
							"//ИМПОРТЕР\r",
							"if( jsonData.perfumeryData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.perfumeryData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.perfumeryData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status=\"EMMITED\"||\"APPLIED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){\r",
							"pm.environment.set('*Импортер ТГ Парфюм',jsonData.codeData.producerName) \r",
							"}\r",
							"\r",
							"\r",
							"//ЭКСПОРТЕР\r",
							"if( (jsonData.perfumeryData.productProperty.emissionType = \"CROSSBORDER\"||\"FOREIGN\")&&(jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){ \r",
							"pm.environment.set('*Экспортёр ТГ Парфюм', jsonData.perfumeryData.productProperty. exporterName) \r",
							"}\r",
							"\r",
							"//ОПЕРАТОР\r",
							"if( (jsonData.perfumeryData.productProperty.emissionType = \"CROSSBORDER\")&&(jsonData.status=\"EMMITED\"||\"APPLIED\")){\r",
							"pm.environment.set('*Оператор ТГ Парфюм', jsonData.perfumeryData.producerName) \r",
							"};\r",
							"\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===1034){\r",
							"        pm.environment.set('*Тип ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===13960){\r",
							"        pm.environment.set('*Пирамида композиции ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2716){\r",
							"        pm.environment.set('*Заявленный объем ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2483){\r",
							"        pm.environment.set('*Состав ТГ Парфюм', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"var tgTires = new Object();\r",
							"tgTires.Фотографий = a;\r",
							"tgTires.Наименование_товара = pm.environment.get('*Наименование товара ТГ Парфюм');\r",
							"tgTires.Cтрана = pm.environment.get('*Cтрана ТГ Парфюм');\r",
							"tgTires.Дата_производства =  pm.environment.get('*Дата производства ТГ Парфюм');\r",
							"tgTires.Производитель = pm.environment.get('*Производитель ТГ Парфюм');\r",
							"tgTires.Импортер = pm.environment.get('*Импортер ТГ Парфюм');\r",
							"tgTires.Экспортер = pm.environment.get('*Экспортёр ТГ Парфюм');\r",
							"tgTires.Оператор = pm.environment.get('*Оператор ТГ Парфюм');\r",
							"tgTires.Тип = pm.environment.get('*Тип ТГ Парфюм')\r",
							"tgTires.Пирамида_композиции = pm.environment.get('*Пирамида композиции ТГ Парфюм')\r",
							"tgTires.Заявленный_объем = pm.environment.get('*Заявленный объем ТГ Парфюм')\r",
							"tgTires.Состав = pm.environment.get('*Состав ТГ Парфюм')\r",
							"\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgTires));\r",
							"break;\r",
							"\r",
							" \r",
							"    case \"lp\":\r",
							"\r",
							"        //pm.environment.set('*Изображение', jsonData.catalogData. good_images[i] )\r",
							"        pm.environment.set('*Наименование товара ТГ Одежда', jsonData.productName)\r",
							"        pm.environment.set('*Cтрана ТГ Одежда', jsonData.lpData.country)\r",
							"        pm.environment.set('*Торговая марка ТГ Одежда', jsonData.lpData.brand)\r",
							"\r",
							"\r",
							"        //ПРОИЗВОДИТЕЛЬ\r",
							"        if (jsonData.lpData.productProperty.emissionType = \"REMARK\" || \"REMAINS\" || \"COMMISSION\" || \"LOCAL\") {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"            for (var a in jsonData.catalogData) {\r",
							"                for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                    if (jsonData.catalogData[a].good_attrs[i].attr_id === 2503) {\r",
							"                        pm.environment.set('*Производитель ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"        else if ((jsonData.lpData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status = \"EMMITED\" || \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\" || \"APPLIED\")) {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"            for (var a in jsonData.catalogData) {\r",
							"                for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                    if (jsonData.catalogData[a].good_attrs[i].attr_id === 2503) {\r",
							"                        pm.environment.set('*Производитель ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        //ИМПОРТЕР\r",
							"        if (jsonData.lpData.productProperty.emissionType = \"REMARK\" || \"REMAINS\" || \"COMMISSION\" || \"LOCAL\") {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"            for (let i in jsonData.catalogData.good_attrs) {\r",
							"                if (jsonData.catalogData.good_attrs[i].attr_id == 2482) {\r",
							"                    pm.environment.set('*Импортер ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value)\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"        else if ((jsonData.lpData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status = \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\")) {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"            for (let i in jsonData.catalogData.good_attrs) {\r",
							"                if (jsonData.catalogData.good_attrs[i].attr_id == 2482) {\r",
							"                    pm.environment.set('*Импортер ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value)\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"        else if ((jsonData.lpData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status = \"EMMITED\" || \"APPLIED\" || \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\")) {\r",
							"            pm.environment.set('*Импортер ТГ Одежда', jsonData.codeData.producerName)\r",
							"\r",
							"        }\r",
							"\r",
							"\r",
							"        //ЭКСПОРТЕР\r",
							"        if ((jsonData.lpData.productProperty.emissionType = \"CROSSBORDER\" || \"FOREIGN\") && (jsonData.status = \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\")) {\r",
							"            pm.environment.set('*Экспортёр ТГ Одежда', jsonData.lpData.productProperty.exporterName)\r",
							"        }\r",
							"\r",
							"        //ОПЕРАТОР\r",
							"        if ((jsonData.lpData.productProperty.emissionType = \"CROSSBORDER\") && (jsonData.status = \"EMMITED\" || \"APPLIED\")) {\r",
							"            pm.environment.set('*Оператор ТГ Одежда', jsonData.lpData.producerName)\r",
							"        };\r",
							"\r",
							"        for (var a in jsonData.catalogData) {\r",
							"            for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                if (jsonData.catalogData[a].good_attrs[i].attr_id === 2483) {\r",
							"                    pm.environment.set('*Состав ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        for (var a in jsonData.catalogData) {\r",
							"            for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                if (jsonData.catalogData[a].good_attrs[i].attr_id === 13914) {\r",
							"                    pm.environment.set('*Модель/артикул ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        for (var a in jsonData.catalogData) {\r",
							"            for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                if (jsonData.catalogData[a].good_attrs[i].attr_id === 35) {\r",
							"                    pm.environment.set('*Размер ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        for (var a in jsonData.catalogData) {\r",
							"            for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                if (jsonData.catalogData[a].good_attrs[i].attr_id === 36) {\r",
							"                    pm.environment.set('*Цвет ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        for (var a in jsonData.catalogData) {\r",
							"            for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                if (jsonData.catalogData[a].good_attrs[i].attr_id === 14013) {\r",
							"                    pm.environment.set('*Пол ТГ Одежда', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"        var tgСlothes = new Object();\r",
							"        tgСlothes.Изображение = a;\r",
							"        tgСlothes.Наименование_товара = pm.environment.get('*Наименование товара ТГ Одежда');\r",
							"        tgСlothes.Cтрана = pm.environment.get('*Cтрана ТГ Одежда');\r",
							"        tgСlothes.Торговая_марка = pm.environment.get('*Торговая марка ТГ Одежда');\r",
							"        tgСlothes.Производитель = pm.environment.get('*Производитель ТГ Одежда');\r",
							"        tgСlothes.Импортер = pm.environment.get('*Импортер ТГ Одежда');\r",
							"        tgСlothes.Экспортер = pm.environment.get('*Экспортёр ТГ Одежда');\r",
							"        tgСlothes.Оператор = pm.environment.get('*Оператор ТГ Одежда');\r",
							"        tgСlothes.Состав = pm.environment.get('*Состав ТГ Одежда')\r",
							"        tgСlothes.Модель_или_артикул = pm.environment.get('*Модель/артикул ТГ Одежда')\r",
							"        tgСlothes.Размер = pm.environment.get('*Размер ТГ Одежда')\r",
							"        tgСlothes.Цвет = pm.environment.get('*Цвет ТГ Одежда')\r",
							"        tgСlothes.Пол = pm.environment.get('*Пол ТГ Одежда')\r",
							"\r",
							"        function showProps(obj) {\r",
							"            var result = \"\";\r",
							"            for (var i in obj) {\r",
							"                if (obj.hasOwnProperty(i)) {\r",
							"                    if (obj[i] != undefined) {\r",
							"                        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"            return result;\r",
							"        }\r",
							"        console.log(showProps(tgСlothes));\r",
							"        break;\r",
							"\r",
							"\r",
							"    case \"tobacco\":\r",
							"\r",
							"        pm.environment.set('*Наименование товара ТГ Табак', jsonData.productName)\r",
							"        pm.environment.set('*Производитель / Импортёр ТГ Табак', jsonData.producerName)\r",
							"        pm.environment.set('*Максимальная цена ТГ Табак', jsonData.cost/100)\r",
							"        pm.environment.set('*Сайта производителя ТГ Табак', jsonData.brandOwnerUrl)\r",
							"        pm.environment.set('*Сайта марки ТГ Табак', jsonData.brandUrl)\r",
							"\r",
							"\r",
							"\r",
							"        switch (jsonData.tobaccoData.packageType) {\r",
							"            case 'pack':\r",
							"                pm.environment.set('*Упаковка ТГ Табак', 'Пачка');\r",
							"                break;\r",
							"            case 'block':\r",
							"                pm.environment.set('*Упаковка ТГ Табак', 'Блок');\r",
							"                break;\r",
							"            case 'box':\r",
							"                pm.environment.set('*Упаковка ТГ Табак', 'Короб');\r",
							"                break;\r",
							"            case 'pallet':\r",
							"                pm.environment.set('*Упаковка ТГ Табак', 'Паллета');\r",
							"                break;\r",
							"\r",
							"        }\r",
							"\r",
							"        var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"        var tgTobacco = new Object();\r",
							"        tgTobacco.Фотографий = a;\r",
							"        tgTobacco.Наименование_товара = pm.environment.get('*Наименование товара ТГ Табак');\r",
							"        tgTobacco.Производитель_или_Импортёр = pm.environment.get('*Производитель / Импортёр ТГ Табак');\r",
							"        tgTobacco.Максимальная_цена = pm.environment.get('*Максимальная цена ТГ Табак');\r",
							"        tgTobacco.Сайт_производителя = pm.environment.get('*Сайта производителя ТГ Табак');\r",
							"        tgTobacco.Сайт_марки = pm.environment.get('*Сайта марки ТГ Табак');\r",
							"        tgTobacco.Упаковка = pm.environment.get('*Упаковка ТГ Табак');\r",
							"\r",
							"        function showProps(obj) {\r",
							"            var result = \"\";\r",
							"            for (var i in obj) {\r",
							"                if (obj.hasOwnProperty(i)) {\r",
							"                    if (obj[i] != undefined) {\r",
							"                        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"            return result;\r",
							"        }\r",
							"        console.log(showProps(tgTobacco));\r",
							"\r",
							"        break;\r",
							"\r",
							"   \r",
							"\r",
							"    case \"electronics\":\r",
							"\r",
							"        //pm.environment.set('*Изображение', jsonData.catalogData. good_images[i])\r",
							"        pm.environment.set('*Наименование товара ТГ Фото', jsonData.productName)\r",
							"        pm.environment.set('*Cтрана ТГ Фото', jsonData.electronicsData.country)\r",
							"        pm.environment.set('*Торговая марка ТГ Фото', jsonData.electronicsData.brand)\r",
							"        pm.environment.set('*Модель (артикул) ТГ Фото', jsonData.electronicsData.model)\r",
							"        \r",
							"\r",
							"        //ПРОИЗВОДИТЕЛЬ\r",
							"        if (jsonData.electronicsData.productProperty.emissionType = \"REMARK\" || \"REMAINS\" || \"COMMISSION\" || \"LOCAL\") {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"            for (var a in jsonData.catalogData) {\r",
							"                for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                    if (jsonData.catalogData[a].good_attrs[i].attr_id === 2503) {\r",
							"                        pm.environment.set('*Производитель ТГ Фото', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"        else if ((jsonData.electronicsData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status = \"EMMITED\" || \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\" || \"APPLIED\")) {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"            for (var a in jsonData.catalogData) {\r",
							"                for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                    if (jsonData.catalogData[a].good_attrs[i].attr_id === 2503) {\r",
							"                        pm.environment.set('*Производитель ТГ Фото', jsonData.catalogData[a].good_attrs[i].attr_value)\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"        //pm.environment.set('*Производитель', jsonData.catalogData[0].good_attrs[4].attr_value);\r",
							"        //console.log(pm.environment.get('*Производитель'))\r",
							"\r",
							"\r",
							"\r",
							"        //ИМПОРТЕР\r",
							"        if (jsonData.electronicsData.productProperty.emissionType = \"REMARK\" || \"REMAINS\" || \"COMMISSION\" || \"LOCAL\") {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"            for (var a in jsonData.catalogData) {\r",
							"                for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                    if (jsonData.catalogData[a].good_attrs[i].attr_id === 2482) {\r",
							"                        pm.environment.set('*Импортер ТГ Фото', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"        else if ((jsonData.electronicsData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status = \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\")) {\r",
							"            //значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"            for (var a in jsonData.catalogData) {\r",
							"                for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                    if (jsonData.catalogData[a].good_attrs[i].attr_id === 2482) {\r",
							"                        pm.environment.set('*Импортер ТГ Фото', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"        else if ((jsonData.electronicsData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status = \"EMMITED\" || \"APPLIED\" || \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\")) {\r",
							"            pm.environment.set('*Импортер ТГ Фото', jsonData.electronicsData.producerName);\r",
							"        }\r",
							"\r",
							"\r",
							"\r",
							"        //ЭКСПОРТЕР\r",
							"        if ((jsonData.electronicsData.productProperty.emissionType = \"CROSSBORDER\" || \"FOREIGN\") && (jsonData.status = \"INTRODUCED\" || \"WRITTEN_OFF\" || \"RETIRED\")) {\r",
							"            pm.environment.set('*Экспортёр ТГ Фото', jsonData.electronicsData.productProperty.exporterName)\r",
							"        }\r",
							"         \r",
							"\r",
							"        //ОПЕРАТОР\r",
							"        if ((jsonData.electronicsData.productProperty.emissionType = \"CROSSBORDER\") && (jsonData.status = \"EMMITED\" || \"APPLIED\")) {\r",
							"            pm.environment.set('*Оператотр ТГ Фото', jsonData.electronicsData.producerName)\r",
							"        };\r",
							"\r",
							"        for (var a in jsonData.catalogData) {\r",
							"            for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                if (jsonData.catalogData[a].good_attrs[i].attr_id === 12) {\r",
							"                    pm.environment.set('*Вид товара ТГ Фото', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        for (var a in jsonData.catalogData) {\r",
							"            for (var i in jsonData.catalogData[a].good_attrs) {\r",
							"                if (jsonData.catalogData[a].good_attrs[i].attr_id === 14457) {\r",
							"                    pm.environment.set('*Тип камеры ТГ Фото', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"\r",
							"        var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"        var tgPhoto = new Object();\r",
							"        \r",
							"        tgPhoto.Изображений = a;\r",
							"        tgPhoto.Наименование_товара = pm.environment.get('*Наименование товара ТГ Фото');\r",
							"        tgPhoto.Cтрана = pm.environment.get('*Cтрана ТГ Фото');\r",
							"        tgPhoto.Торговая_марка = pm.environment.get('*Торговая марка ТГ Фото');\r",
							"        tgPhoto.Модель = pm.environment.get('*Модель (артикул) ТГ Фото');\r",
							"        tgPhoto.Производитель = pm.environment.get('*Производитель ТГ Фото');\r",
							"        tgPhoto.Импортер = pm.environment.get('*Импортер ТГ Фото');\r",
							"        tgPhoto.Экспортер = pm.environment.get('*Экспортёр ТГ Фото');\r",
							"        tgPhoto.Оператор = pm.environment.get('*Оператор ТГ Фото');\r",
							"        tgPhoto.Вид_товара = pm.environment.get('*Вид товара ТГ Фото');\r",
							"        tgPhoto.Тип_камеры = pm.environment.get('*Тип камеры ТГ Фото');\r",
							"\r",
							"\r",
							"\r",
							"        function showProps(obj) {\r",
							"            var result = \"\";\r",
							"            for (var i in obj) {\r",
							"                if (obj.hasOwnProperty(i)) {\r",
							"                    if (obj[i] != undefined) {\r",
							"                        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"            return result;\r",
							"        }\r",
							"        console.log(showProps(tgPhoto));\r",
							"\r",
							"\r",
							"        break;\r",
							"\r",
							"     case \"tires\":\r",
							"pm.environment.set('*Наименование товара ТГ Шины', jsonData.productName)\r",
							"pm.environment.set('*Cтрана ТГ Шины', jsonData.tiresData. country)\r",
							"pm.environment.set('*Торговая марка ТГ Шины', jsonData.tiresData. brand)\r",
							"pm.environment.set('*Модель / Артикул ТГ Шины', jsonData.tiresData. model)\r",
							"\r",
							"//ПРОИЗВОДИТЕЛЬ\r",
							"if( jsonData.tiresData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503 \r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.tiresData.productProperty.emissionType = \"FOREIGN\") && (jsonData.status=\"EMMITED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\"||\"APPLIED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2503\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2503){\r",
							"        pm.environment.set('*Производитель ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        \r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"        \r",
							"//ИМПОРТЕР\r",
							"if( jsonData.tiresData.productProperty.emissionType = \"REMARK\"||\"REMAINS\"||\"COMMISSION\"||\"LOCAL\"){ \r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482 \r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.tiresData.productProperty.emissionType = \"CROSSBORDER \") && (jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")) {\r",
							"//значение из поля \"attr_value\" объекта, \"attr_id\" которого = 2482\r",
							"for(let i in jsonData.catalogData.good_attrs) {\r",
							"    if(jsonData.catalogData.good_attrs[i].attr_id==2482){\r",
							"        pm.environment.set('*Импортер ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value) }\r",
							"    }\r",
							"}\r",
							"else if(( jsonData.tiresData.productProperty.emissionType = \"FOREIGN \") && (jsonData.status=\"EMMITED\"||\"APPLIED\"||\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){\r",
							"pm.environment.set('*Импортер ТГ Шины', jsonData.tiresData.producerName) \r",
							"}\r",
							"\r",
							"\r",
							"//ЭКСПОРТЕР\r",
							"if( (jsonData.tiresData.productProperty.emissionType = \"CROSSBORDER\"||\"FOREIGN\")&&(jsonData.status=\"INTRODUCED\"||\"WRITTEN_OFF\"||\"RETIRED\")){ \r",
							"pm.environment.set('*Экспортёр ТГ Шины', jsonData.tiresData.productProperty. exporterName) \r",
							"}\r",
							"\r",
							"//ОПЕРАТОР\r",
							"if( (jsonData.tiresData.productProperty.emissionType = \"CROSSBORDER\")&&(jsonData.status=\"EMMITED\"||\"APPLIED\")){\r",
							"pm.environment.set('*Оператор ТГ Шины', jsonData.tiresData.producerName) \r",
							"};\r",
							"\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===14210){\r",
							"        pm.environment.set('*Ширина профиля ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2437){\r",
							"        pm.environment.set('*Высота ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===14195){\r",
							"        pm.environment.set('*Номинальный посадочный диаметр обода ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===14216){\r",
							"        pm.environment.set('*Индекс нагрузки на шину ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===14204){\r",
							"        pm.environment.set('*Категория скорости ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"\r",
							"    for(var a in jsonData.catalogData ){\r",
							"    for(var i in jsonData.catalogData[a].good_attrs) {\r",
							"        if(jsonData.catalogData[a].good_attrs[i].attr_id===2493){\r",
							"        pm.environment.set('*Сезонность ТГ Шины', jsonData.catalogData[a].good_attrs[i].attr_value);\r",
							"        }\r",
							"        }\r",
							"    }\r",
							"    var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"var tgTires = new Object();\r",
							"tgTires.Фотографий = a;\r",
							"tgTires.Наименование_товара = pm.environment.get('*Наименование товара ТГ Шины');\r",
							"tgTires.Cтрана = pm.environment.get('*Cтрана ТГ Шины');\r",
							"tgTires.Торговая_марка =  pm.environment.get('*Торговая марка ТГ Шины');\r",
							"tgTires.Модель_или_Артикул = pm.environment.get('*Модель / Артикул ТГ Шины');\r",
							"tgTires.Производитель = pm.environment.get('*Производитель ТГ Шины ТГ Шины');\r",
							"tgTires.Импортер = pm.environment.get('*Импортер ТГ Шины');\r",
							"tgTires.Экспортер = pm.environment.get('*Экспортёр ТГ Шины');\r",
							"tgTires.Оператор = pm.environment.get('*Оператор ТГ Шины');\r",
							"tgTires.Ширина_профиля = pm.environment.get('*Ширина профиля ТГ Шины')\r",
							"tgTires.Высота = pm.environment.get('*Высота ТГ Шины')\r",
							"tgTires.Номинальный_посадочный_диаметр_обода = pm.environment.get('*Номинальный посадочный диаметр обода ТГ Шины')\r",
							"tgTires.Индекс_нагрузки_на_шину = pm.environment.get('*Индекс нагрузки на шину ТГ Шины')\r",
							"tgTires.Категория_скорости = pm.environment.get('*Категория скорости ТГ Шины')\r",
							"tgTires.Сезонность = pm.environment.get('*Сезонность ТГ Шины')\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgTires));\r",
							"break;\r",
							"\r",
							"case 'drugs':\r",
							"pm.environment.set('*Наименование товара ТГ Фарма',jsonData.productName)\r",
							"pm.environment.set('*Владелец рег. удостоверения ТГ Фарма',jsonData.drugsData.foiv.regHolder)\r",
							"pm.environment.set('*Международное наименование(МНН) ТГ Фарма',jsonData.drugsData.foiv.prodNormName)    \r",
							"pm.environment.set('*Срок годности ТГ Фарма',jsonData.drugsData.expirationDate)\r",
							"pm.environment.set('*Описание',jsonData.drugsData.foiv.prodFormNormName + ' ' + jsonData.drugsData.foiv.prodDNormName)\r",
							"\r",
							"pm.environment.set('*Импортер ТГ Фарма',jsonData.drugsData.importerName)\r",
							"pm.environment.set('*Внутри упаковки ТГ Фарма',jsonData.drugsData.foiv.prodPack1Name + ' ' + jsonData.drugsData.foiv.prodPack12+'шт по'+jsonData.drugsData.foiv.prodPack1Size)\r",
							"pm.environment.set('*Комплектность ТГ Фарма',jsonData.drugsData.foiv.completeness)\r",
							"pm.environment.set('*Серия ТГ Фарма',jsonData.batch)\r",
							"\r",
							"var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"var tgDrugs = new Object();\r",
							"tgDrugs.Фотографий = a;\r",
							"tgDrugs.Наименование_товара = pm.environment.get('*Наименование товара ТГ Фарма');\r",
							"tgDrugs.Владелец_рег_удостоверения = pm.environment.get('*Владелец рег. удостоверения ТГ Фарма');\r",
							"tgDrugs.Международное_наименование = pm.environment.get('*Международное наименование(МНН) ТГ Фарма');\r",
							"tgDrugs.Срок_годности = pm.environment.get('*Срок годности ТГ Фарма');\r",
							"tgDrugs.Описание = pm.environment.get('*Описание ТГ Фарма');\r",
							"tgDrugs.Импортер = pm.environment.get('*Импортер ТГ Фарма');\r",
							"tgDrugs.Внутри_упаковки = pm.environment.get('*Внутри упаковки ТГ Фарма');\r",
							"tgDrugs.Комплектность = pm.environment.get('*Комплектность ТГ Фарма');\r",
							"tgDrugs.Серия = pm.environment.get('*Серия ТГ Фарма');\r",
							"\r",
							"\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgDrugs));\r",
							"break;\r",
							"\r",
							"\r",
							"case 'fur': \r",
							"\r",
							"pm.environment.set('*Наименование товара тг меха', jsonData.productName)\r",
							"pm.environment.set('*Cтрана тг меха', jsonData.furData.country.value)\r",
							"pm.environment.set('*Производитель тг меха', jsonData.furData.producer.value)\r",
							"pm.environment.set('*Вид меха тг меха', jsonData.furData.kindFur.value)\r",
							"pm.environment.set('*Крашеный мех тг меха', jsonData.furData.dyedFur.value)\r",
							"pm.environment.set('*Размер изделия тг меха', jsonData.furData.productSize.value)\r",
							"pm.environment.set('*Модель изделия тг меха', jsonData.furData.productModel.value)\r",
							"pm.environment.set('*Цвет изделия тг меха', jsonData.furData.productColor.value)\r",
							"pm.environment.set('*Бренд тг меха', jsonData.furData.brand.value)\r",
							"pm.environment.set('*Продавец тг меха', jsonData.furData. seller.value)\r",
							"pm.environment.set('*Декларация соответствия тг меха', jsonData.furData.declarConformNumber.value)\r",
							"pm.environment.set('*Номер контрольного знака тг меха', jsonData.furData.kiz.value)\r",
							"\r",
							"var a =0;\r",
							"        for(let b in jsonData.catalogData){\r",
							"            for(let i in jsonData.catalogData[b].good_images){\r",
							"                a++;\r",
							"            }\r",
							"        }\r",
							"\r",
							"\r",
							"var tgFur = new Object();\r",
							"tgFur.Фотографий = a;\r",
							"tgFur.Наименование_товара = pm.environment.get('*Наименование товара тг меха');\r",
							"tgFur.Cтрана = pm.environment.get('*Cтрана тг меха');\r",
							"tgFur.Производитель = pm.environment.get('*Производитель тг меха');\r",
							"tgFur.Вид_меха = pm.environment.get('*Вид меха тг меха');\r",
							"tgFur.Крашеный_мех = pm.environment.get('*Крашеный мех тг меха');\r",
							"tgFur.Размер_изделия = pm.environment.get('*Размер изделия тг меха');\r",
							"tgFur.Модель_изделия = pm.environment.get('*Модель изделия тг меха');\r",
							"tgFur.Цвет_изделия = pm.environment.get('*Цвет изделия тг меха');\r",
							"tgFur.Бренд = pm.environment.get('*Бренд тг меха');\r",
							"tgFur.Продавец = pm.environment.get('*Продавец тг меха');\r",
							"tgFur.Декларация_соответствия = pm.environment.get('*Декларация соответствия тг меха');\r",
							"tgFur.Номер_контрольного_знака = pm.environment.get('*Номер контрольного знака тг меха');\r",
							"\r",
							"\r",
							"function showProps(obj) {\r",
							"  var result = \"\";\r",
							"  for (var i in obj) {\r",
							"    if (obj.hasOwnProperty(i)) {\r",
							"        if(obj[i]!= undefined){\r",
							"        result += i + \" = \" + obj[i] + \"\\n\";\r",
							"        }\r",
							"    }\r",
							"  }\r",
							"  return result;\r",
							"}\r",
							"console.log(showProps(tgFur));\r",
							"break;}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"code\": \"{{code}}\",\r\n\t\"codeType\": \"{{codeType}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dev.mobile.crpt.tech/mobile/check",
					"protocol": "https",
					"host": [
						"dev",
						"mobile",
						"crpt",
						"tech"
					],
					"path": [
						"mobile",
						"check"
					]
				}
			},
			"response": []
		}
	]
}